From 5866f1a8f3c73f7f569b3b652540ff8b1357ae5b Mon Sep 17 00:00:00 2001
From: benson <bensonhuang@tw.shuttle.com>
Date: Wed, 20 Apr 2016 13:40:49 +0800
Subject: [PATCH 002/443] Add Server Connection API Connection Check,  Device
 Config Get , Device Config Set

---
 api/connection.py | 92 ++++++++++++++++++++++++++++++++++---------------------
 1 file changed, 57 insertions(+), 35 deletions(-)

diff --git a/api/connection.py b/api/connection.py
index 3a35088..49437b2 100644
--- a/api/connection.py
+++ b/api/connection.py
@@ -12,18 +12,28 @@ fail_message = {'Message':'xxxxxxxxxxxxxxxx'}
 def check(request):
     if request.method == 'POST':
         try:
-            """response note
-            enter code
-
-            you can refer to the following method:
-            if success, enter values to below variables:
-            result
-            then user like below code to response:
-            res = {'Result' : result}
+            client_ip = request.META['REMOTE_ADDR']
+            req = json.loads(request.body.decode('utf-8'))
+            req_key = {'IP'}
+            if all(k in req for k in req_key) and all(req.values()):
+                try:
+                    from api.models import Devices
+                    devices = Devices.objects.get(ip = client_ip)
 
-            if error, use like below code to response:
-            res = dict(ChainMap(result_fail, fail_code999, fail_message))
-            """
+                    if devices.state == 'Proposed':
+                        res = dict({'Result':0})
+                    elif devices.state == 'Approved':
+                        res = dict({'Result':1})
+                    elif devices.state == 'Setting':
+                        res = dict({'Result':2})
+                    elif devices.state == 'Getting':
+                        res = dict({'Result':3})
+                    else:
+                        res = dict(ChainMap(result_fail, fail_code999, fail_message))
+                except:
+                    res = dict(ChainMap(result_fail, fail_code999, fail_message))
+            else:
+                res = dict(ChainMap(result_fail, fail_code999, fail_message))
         except:
             res = dict(ChainMap(result_fail, fail_code999, fail_message))
 
@@ -34,27 +44,28 @@ def check(request):
 def get(request):
     if request.method == 'POST':
         try:
-            """response note
-            enter code
-
-            you can refer to the following method:
-            if success, enter values to below variables:
-            welcome, accessdenied, screensaver, ntp, timezone, audio, bioscore, language
-            then user like below code to response:
-            res = dict(ChainMap(result_success, {
-                'Welcome' : welcome,
-                'AccessDenied' : accessdenied,
-                'ScreenSaver' : screensaver,
-                'NTP' : ntp,
-                'Timezone' : timezone,
-                'Audio' : audio,
-                'BioScore' : bioscore,
-                'Language' : language
-            }))
+            client_ip = request.META['REMOTE_ADDR']
+            req = json.loads(request.body.decode('utf-8'))
+            req_key = {'IP'}
+            if all(k in req for k in req_key) and all(req.values()):
+                try:
+                    from api.models import Devices
+                    devices = Devices.objects.get(ip = client_ip)
 
-            if error, use like below code to response:
-            res = dict(ChainMap(result_fail, fail_code999, fail_message))
-            """
+                    res = dict(ChainMap(result_success, {
+                        'Welcome' : devices.welcome,
+                        'AccessDenied' : devices.accessdenied,
+                        'ScreenSaver' : devices.screensaver,
+                        'NTP' : devices.ntp,
+                        'Timezone' : devices.timezone,
+                        'Audio' : devices.audio,
+                        'BioScore' : devices.bioscore,
+                        'Language' : devices.language
+                    }))
+                except:
+                    res = dict(ChainMap(result_fail, fail_code999, fail_message))
+            else:
+                res = dict(ChainMap(result_fail, fail_code999, fail_message))
         except:
             res = dict(ChainMap(result_fail, fail_code999, fail_message))
 
@@ -65,13 +76,24 @@ def get(request):
 def set(request):
     if request.method == 'POST':
         try:
+            client_ip = request.META['REMOTE_ADDR']
             req = json.loads(request.body.decode('utf-8'))
             req_key = {'Welcome', 'AccessDenied', 'ScreenSaver', 'NTP', 'Timezone', 'Audio', 'BioScore', 'Language'}
             if all(k in req for k in req_key) and all(req.values()):
-                """
-                enter code
-                """
-                res = dict(result_success)
+                try:
+                    from api.models import Devices
+                    Devices.objects.filter(ip = client_ip).update(welcome = req['Welcome'])
+                    Devices.objects.filter(ip = client_ip).update(accessdenied = req['AccessDenied'])
+                    Devices.objects.filter(ip = client_ip).update(screensaver = req['ScreenSaver'])
+                    Devices.objects.filter(ip = client_ip).update(ntp = req['NTP'])
+                    Devices.objects.filter(ip = client_ip).update(timezone = req['Timezone'])
+                    Devices.objects.filter(ip = client_ip).update(audio = req['Audio'])
+                    Devices.objects.filter(ip = client_ip).update(bioscore = req['BioScore'])
+                    Devices.objects.filter(ip = client_ip).update(language = req['Language'])
+
+                    res = dict(result_success)
+                except:
+                    res = dict(ChainMap(result_fail, fail_code999, fail_message))
             else:
                 res = dict(ChainMap(result_fail, fail_code999, fail_message))
         except:
-- 
1.9.1

