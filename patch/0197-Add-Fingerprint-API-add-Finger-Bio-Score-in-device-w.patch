From 40442289ab091682369a8f0d5c2c123238f48636 Mon Sep 17 00:00:00 2001
From: benson <bensonhuang@tw.shuttle.com>
Date: Mon, 25 Jul 2016 11:36:38 +0800
Subject: [PATCH 197/443] Add Fingerprint API, add Finger Bio Score in device
 web.

---
 api/fingerprint.py             | 214 +++++++++++++++++++++++++++++++++++++++++
 api/models.py                  |   4 +
 br06/settings.py               |   2 +
 br06/urls.py                   |   9 +-
 devices/views.py               |   1 +
 media/fruserpic_fp/.gitignore  |   1 +
 templates/device_edit.html     |   6 ++
 templates/device_settings.html |  13 +++
 8 files changed, 249 insertions(+), 1 deletion(-)
 create mode 100644 api/fingerprint.py
 create mode 100755 media/fruserpic_fp/.gitignore

diff --git a/api/fingerprint.py b/api/fingerprint.py
new file mode 100644
index 0000000..caf2a51
--- /dev/null
+++ b/api/fingerprint.py
@@ -0,0 +1,214 @@
+import json, requests, os
+from collections import ChainMap
+from django.http import JsonResponse
+from django.views.decorators.csrf import csrf_exempt
+from .models import Devices, Frusers, Systemlogs, Fruserlogs, Frusergroupmember, Frusergroupdevices
+from django.conf import settings
+from operator import itemgetter
+import socket
+import sys
+
+result_success = {'Result' : 'Success'}
+result_pass = {'Result' : 'Pass'}
+result_fail = {'Result' : 'Fail'}
+fail_code999 = {'Code' : '9999'}
+message_method_error = {'Message' : 'method error'}
+
+@csrf_exempt
+def verify(request):
+    if request.method == 'POST':
+        try:
+            ip_device = Devices.objects.get(IP = request.META['REMOTE_ADDR'])
+            if ip_device.State != 'Proposed':
+                HOST, PORT = "127.0.0.1", 8003
+                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+                check = s.connect((HOST, PORT))
+                if (check == None):
+                    fruser = Frusers.objects.get(FRUserId = request.POST.get('FRUserId'))
+                    if fruser.PersonId:
+                        FingerDir = ''.join([settings.FP_PIC_DIR, fruser.FRUserId, '_verify.bmp'])
+
+                        open(
+                            os.path.join(settings.MEDIA_DIR,FingerDir),
+                            'wb+').write(request.FILES['image'].file.getvalue()
+                        )
+
+                        VerifyUserId = 'V1' + str(settings.FINGER_LEVEL[ip_device.FingerBioScore]) + '*' + fruser.FRUserId
+                        if (not 0):
+                            s.send(VerifyUserId.encode())
+
+                        data = s.recv(4)
+                        s.close()
+                        if data.decode() == 'Pass' :
+                            for i in fruser.frusergroupmember_set.filter(FRUserOId = fruser.OId):
+                                print(i.GroupOId.OId)
+                                for j in i.GroupOId.frusergroupdevices_set.filter(GroupOId = i.GroupOId.OId):
+                                    print(j.DeviceOId.IP)
+                                    if ip_device.IP == j.DeviceOId.IP:
+                                        Fruserlogs.objects.create(FRUserId = fruser.FRUserId, FRUserName = fruser.Name, DeviceName = ip_device.Name, LogContent = 'Face verify pass')
+                                        return JsonResponse(dict(ChainMap(result_pass, {'FRUserId' : fruser.FRUserId})))
+                            raise Exception('No accept device in frusergroup')
+                        else:
+                            raise Exception('Fingerprint verify fail')
+                    else:
+                        raise Exception('No PersonId')
+                else:
+                    raise Exception('Need connect Finger Deamon')
+            else:
+                raise Exception('Need accept')
+        except Exception as error:
+            print(str(error))
+            Fruserlogs.objects.create(DeviceOId = ip_device.OId, DeviceName = ip_device.Name, LogContent = 'Finger verify fail : %s' % str(error))
+            return JsonResponse(dict(ChainMap(result_fail, fail_code999, {'Message' : str(error)})))
+    else:
+        return JsonResponse(dict(ChainMap(result_fail, fail_code999, message_method_error)))
+
+
+@csrf_exempt
+def add(request):
+    if request.method == 'POST':
+        try:
+            ip_device = Devices.objects.get(IP = request.META['REMOTE_ADDR'])
+            if ip_device.State != 'Proposed':
+                HOST, PORT = "127.0.0.1", 8003
+                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+                check = s.connect((HOST, PORT))
+                if (check == None):
+                    fruser = Frusers.objects.get(FRUserId = request.POST.get('FRUserId'))
+                    FingerDir_1 = ''.join([settings.FP_PIC_DIR, fruser.FRUserId, '_register1.bmp'])
+                    FingerDir_2 = ''.join([settings.FP_PIC_DIR, fruser.FRUserId, '_register2.bmp'])
+
+                    if (os.path.exists('media/' + FingerDir_1) == False and os.path.exists('media/' + FingerDir_2) == True) or (os.path.exists('media/' + FingerDir_1) == False and os.path.exists('media/' + FingerDir_2) == False) :
+                        open(
+                            os.path.join(settings.MEDIA_DIR,FingerDir_1),
+                            'wb+').write(request.FILES['image'].file.getvalue()
+                        )
+                        RequestUserId ='R1' + '*' + fruser.FRUserId
+                        if (not 0):
+                            s.send(RequestUserId.encode())
+
+                        data = s.recv(7)
+                        s.close()
+                        if data.decode() == 'Success' :
+                            Systemlogs.objects.create(Category = "Frusers", LogContent = 'Finger add Success')
+                            return JsonResponse(result_success)
+                        else:
+                            raise Exception('Finger add fail')
+
+                    if os.path.exists('media/' + FingerDir_1) == True and os.path.exists('media/' + FingerDir_2) == False :
+                        open(
+                            os.path.join(settings.MEDIA_DIR,FingerDir_2),
+                            'wb+').write(request.FILES['image'].file.getvalue()
+                        )
+
+                        RequestUserId ='R2' + '*' + fruser.FRUserId
+                        if (not 0):
+                            s.send(RequestUserId.encode())
+
+                        data = s.recv(7)
+                        s.close()
+                        if data.decode() == 'Success' :
+                            Systemlogs.objects.create(Category = "Frusers", LogContent = 'Finger add Success')
+                            return JsonResponse(result_success)
+                        else:
+                            raise Exception('Finger add fail')
+
+                    if os.path.exists('media/' + FingerDir_1) == True and os.path.exists('media/' + FingerDir_2) == True :
+                        s.close()
+                        Systemlogs.objects.create(Category = "Frusers", LogContent = 'Finger already exists')
+                        return JsonResponse(dict(ChainMap(result_fail, fail_code999, {'Message' : 'Finger already exists'})))
+                else:
+                    raise Exception('Need connect Finger Deamon')
+            else:
+                raise Exception('Need accept')
+        except Exception as error:
+            print(str(error))
+            Systemlogs.objects.create(DeviceOId = ip_device.OId, DeviceName = ip_device.Name, LogContent = 'Finger add fail : %s' % str(error))
+            return JsonResponse(dict(ChainMap(result_fail, fail_code999, {'Message' : str(error)})))
+    else:
+        return JsonResponse(dict(ChainMap(result_fail, fail_code999, message_method_error)))
+
+
+@csrf_exempt
+def delete(request):
+    if request.method == 'POST':
+        request_IP = request.META.get('REMOTE_ADDR',  '')
+        message_head = 'API[{API_name}][Request IP : {request_IP}] : '.format(API_name = 'Finger Delete', request_IP = request_IP)
+        try:
+            req = json.loads(request.body.decode('utf-8'))
+            req_key = {'FRUserId'}
+            if all(k in req for k in req_key) and all(req.values()):
+                ip_device = Devices.objects.get(IP = request_IP)
+                if ip_device.State != 'Proposed':
+                    fruser = Frusers.objects.get(FRUserId = req.get('FRUserId', ''))
+                    FingerDir_1 = ''.join([settings.FP_PIC_DIR, fruser.FRUserId, '_register1.bmp'])
+                    FingerDir_2 = ''.join([settings.FP_PIC_DIR, fruser.FRUserId, '_register2.bmp'])
+                    if os.path.isfile(os.path.join(settings.MEDIA_DIR, FingerDir_1)):
+                        os.remove(os.path.join(settings.MEDIA_DIR, FingerDir_1))
+                    if os.path.isfile(os.path.join(settings.MEDIA_DIR, FingerDir_2)):
+                        os.remove(os.path.join(settings.MEDIA_DIR, FingerDir_2))
+
+                    fruser.FingerprintID1 = b'x00'
+                    fruser.FingerprintID2 = b'x00'
+                    fruser.save()
+
+                    logContent = '{message_head}Delete Finger Successfully'.format(message_head = message_head)
+                    return JsonResponse(result_success)
+                else:
+                    logContent = '{message_head}Device is proposed'.format(message_head = message_head)
+                    return JsonResponse(dict(ChainMap(result_fail, fail_code999, {'Message' : logContent})))
+            else:
+                logContent = '{message_head}Request parameter error'.format(message_head = message_head)
+                return JsonResponse(dict(ChainMap(result_fail, fail_code999, {'Message' : logContent})))
+        except Exception as error:
+            print(str(error))
+            logContent = '{message_head}Error cause by {error}'.format(message_head = message_head, error = str(error))
+            return JsonResponse(dict(ChainMap(result_fail, fail_code999, {'Message' : logContent})))
+
+        finally:
+            try:
+                Systemlogs.objects.create(Category = "Frusers", LogContent = logContent)
+            except Exception as error:
+                print(str(error))
+                logContent = '{message_head}System log create error cause by {error}'.format(message_head = message_head, error = str(error))
+                return JsonResponse(dict(ChainMap(result_fail, fail_code999, {'Message' : logContent})))
+    else:
+        return JsonResponse(dict(ChainMap(result_fail, fail_code999, message_method_error)))
+
+
+@csrf_exempt
+def check(request):
+    if request.method == 'POST':
+        try:
+            ip_device = Devices.objects.get(IP = request.META['REMOTE_ADDR'])
+            if ip_device.State != 'Proposed':
+                HOST, PORT = "127.0.0.1", 8003
+                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+                check = s.connect((HOST, PORT))
+                if (check == None):
+                    fruser = Frusers.objects.get(FRUserId = request.POST.get('FRUserId'))
+                    FingerDir = ''.join([settings.FP_PIC_DIR, fruser.FRUserId, '_verify.bmp'])
+
+                    open(
+                        os.path.join(settings.MEDIA_DIR,FingerDir),
+                        'wb+').write(request.FILES['image'].file.getvalue()
+                    )
+
+                    VerifyUserId = 'V1' + str(settings.FINGER_LEVEL[ip_device.FingerBioScore]) + '*' + fruser.FRUserId
+                    if (not 0):
+                        s.send(VerifyUserId.encode())
+
+                    data = s.recv(4)
+                    s.close()
+                    if data.decode() == 'Pass' :
+                        return JsonResponse(dict(ChainMap(result_pass, {'FRUserId' : fruser.FRUserId})))
+                    else:
+                        raise Exception('Finger check fail')
+                else:
+                    raise Exception('Need connect Finger Deamon')
+            else:
+                raise Exception('Need accept')
+        except Exception as e:
+            return JsonResponse(dict(ChainMap(result_fail, fail_code999,{'Message' : str(e)})))
+    else:
+        return JsonResponse(dict(ChainMap(result_fail, fail_code999, message_method_error)))
diff --git a/api/models.py b/api/models.py
index 882a875..a5a2386 100644
--- a/api/models.py
+++ b/api/models.py
@@ -192,6 +192,7 @@ class Devices(models.Model):
     Timezone = models.CharField(db_column = 'Timezone', choices = devices_timezone, default = 'UTC+8', max_length = 8, blank = True)
     Audio = models.CharField(db_column = 'Audio', choices = devices_audio, default = 'Enable', max_length = 8, blank = True)
     BioScore = models.CharField(db_column = 'BioScore', choices = devices_bioscore, default = 'Low', max_length = 8, blank = True)
+    FingerBioScore = models.CharField(db_column = 'FingerBioScore', choices = devices_bioscore, default = 'Low', max_length = 8, blank = True)
     Language = models.CharField(db_column = 'Language', choices = devices_language, default = 'en', max_length = 8, blank = True)
     CreateDate = models.DateTimeField(db_column = 'CreateDate', auto_now_add = True)
     UpdateDate = models.DateTimeField(db_column = 'UpdateDate', auto_now = True)
@@ -225,6 +226,7 @@ class Devices(models.Model):
             Timezone = self.Timezone,
             Audio = self.Audio,
             BioScore = self.BioScore,
+            FingerBioScore = self.FingerBioScore,
             Language = self.Language,
             CreateDate = self.CreateDate.strftime("%Y-%m-%d %H:%M:%S"),
             UpdateDate = self.UpdateDate.strftime("%Y-%m-%d %H:%M:%S"),
@@ -339,6 +341,8 @@ class Frusers(models.Model):
     FaceID1 = models.CharField(db_column = 'FaceID1', default = '', max_length = 32, blank = True, null = True)
     FaceID2 = models.CharField(db_column = 'FaceID2', default = '', max_length = 32, blank = True, null = True)
     FaceID3 = models.CharField(db_column = 'FaceID3', default = '', max_length = 32, blank = True, null = True)
+    FingerprintID1 = models.BinaryField(default = b'x00', max_length = 512)
+    FingerprintID2 = models.BinaryField(default = b'x00', max_length = 512)
     RFIDCard = models.CharField(db_column = 'RFIDCard', default = '', max_length = 16, blank = True, null = True)
     State = models.CharField(db_column = 'State', choices = frusers_state, default = 'Enable', max_length = 8)
     DisableCauses = models.CharField(db_column = 'DisableCauses', default = '', max_length = 256, blank = True, null = True)
diff --git a/br06/settings.py b/br06/settings.py
index fd0cb85..754075d 100644
--- a/br06/settings.py
+++ b/br06/settings.py
@@ -167,12 +167,14 @@ STATICFILES_DIRS = [
 
 PIC_DIR = 'fruserpic/'
 PIC_DIR_FACE = 'facepic/'
+FP_PIC_DIR = 'fruserpic_fp/'
 
 LOGSETTING_DIR = os.path.join(MEDIA_DIR, 'logsetting')
 
 TCIT_IP = 'localhost:8800'
 
 CONFIDENCE = {'Low':700, 'Medium':750, 'High':800}
+FINGER_LEVEL = {'Low':15000, 'Medium':20000, 'High':25000}
 EMAIL_HOST = 'webmail.tw.shuttle.com'
 EMAIL_HOST_USER = 'fr_serivce'
 EMAIL_HOST_PASSWORD = 'Pa0000'
diff --git a/br06/urls.py b/br06/urls.py
index b978752..42a6065 100644
--- a/br06/urls.py
+++ b/br06/urls.py
@@ -15,7 +15,7 @@ Including another URLconf
 """
 from django.conf.urls import url, include
 from django.contrib import admin
-from api import user, group, face, recognition, connection, views
+from api import user, group, face, recognition, connection, views, fingerprint
 from user.views import user_setting, user_list_view, user_list_data, user_add_view, user_update_view, add_user, update_user, delete_user
 from frusers.views import fruser_list_view, fruser_edit_view, import_fruser, export_fruser, update_fruser, delete_fruser, fruser_data
 from systemlogs.views import systemlog_list_view, systemlog_export, systemlog_data
@@ -193,3 +193,10 @@ urlpatterns += [
     url(r'^api/connection/get/?$', connection.get),
     url(r'^api/connection/set/?$', connection.set),
 ]
+
+urlpatterns += [
+    url(r'^api/finger/add/?$', fingerprint.add),
+    url(r'^api/finger/delete/?$', fingerprint.delete),
+    url(r'^api/recognition/finger/verify/?$', fingerprint.verify),
+    url(r'^api/recognition/finger/check/?$', fingerprint.check),
+]
diff --git a/devices/views.py b/devices/views.py
index 6f4f8e3..122fb42 100644
--- a/devices/views.py
+++ b/devices/views.py
@@ -204,6 +204,7 @@ def settings_device(request):
             Timezone = request.POST['Timezone'],
             Audio = request.POST['Audio'],
             BioScore = request.POST['BioScore'],
+            FingerBioScore = request.POST['FingerBioScore'],
             Language = request.POST['Language'],
             UpdateDate = datetime.now()
         )
diff --git a/media/fruserpic_fp/.gitignore b/media/fruserpic_fp/.gitignore
new file mode 100755
index 0000000..f935021
--- /dev/null
+++ b/media/fruserpic_fp/.gitignore
@@ -0,0 +1 @@
+!.gitignore
diff --git a/templates/device_edit.html b/templates/device_edit.html
index 2bbdfd3..cf83cc2 100644
--- a/templates/device_edit.html
+++ b/templates/device_edit.html
@@ -169,6 +169,12 @@
                                         </label>
                                     </div>
                                     <div class="form-group">
+                                        <label class="col-md-3 control-label">Finger Bio score :</label>
+                                        <label class="col-md-6 control-label">
+                                            <p class="text-left">{{obj.FingerBioScore}}</p>
+                                        </label>
+                                    </div>
+                                    <div class="form-group">
                                         <label class="col-md-3 control-label">Multi-language :</label>
                                         <label class="col-md-6 control-label">
                                             <p class="text-left">{{obj.Language}}</p>
diff --git a/templates/device_settings.html b/templates/device_settings.html
index f1e9c7b..6e2002d 100644
--- a/templates/device_settings.html
+++ b/templates/device_settings.html
@@ -236,6 +236,16 @@
                                         </div>
                                     </div>
                                     <div class="form-group">
+                                        <label class="col-md-3 control-label">Finger Bio score :</label>
+                                        <div class="col-md-3">
+                                            <select class="form-control" name="FingerBioScore">
+                                                <option value="Low">Low</option>
+                                                <option value="Medium">Medium</option>
+                                                <option value="High">High</option>
+                                            </select>
+                                        </div>
+                                    </div>
+                                    <div class="form-group">
                                         <label class="col-md-3 control-label">Multi-language :</label>
                                         <div class="col-md-3">
                                             <select class="form-control" name="Language">
@@ -294,6 +304,7 @@
             var Timezone = $('select[name=Timezone]').val();
             var Audio = $('input[name=Audio]').prop('checked');
             var BioScore = $('select[name=BioScore]').val();
+            var FingerBioScore = $('select[name=FingerBioScore]').val();
             var Language = $('select[name=Language]').val();
 
             if (Audio) {
@@ -325,6 +336,7 @@
                     'Timezone': Timezone,
                     'Audio': Audio,
                     'BioScore': BioScore,
+                    'FingerBioScore': FingerBioScore,
                     'Language': Language
                 },
                 success: function(data) {
@@ -358,6 +370,7 @@
                 $('input[name="Audio"]').prop('checked', false);
             }
             $('select[name="BioScore"]').val({{obj|safe}}.BioScore);
+            $('select[name="FingerBioScore"]').val({{obj|safe}}.FingerBioScore);
             $('select[name="Language"]').val({{obj|safe}}.Language);
         });
         </script>
-- 
1.9.1

